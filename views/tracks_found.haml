-# Album
-# GET /v3.0/albums/tracks

- def fancy_seconds seconds
  - mm, ss = seconds.to_i.divmod(60)
  - hh, mm = mm.divmod(60)
  - dd, hh = hh.divmod(24)
  - if hh > 0
    - "#{hh.to_s.rjust(2," ")}:#{mm.to_s.rjust(2," ")}:#{ss.to_s.rjust(2,"0")}"
  - elsif mm > 0
    - "#{mm.to_s.rjust(2," ")}:#{ss.to_s.rjust(2,"0")}"
  - elsif ss > 0
    - "00:#{ss.to_s.rjust(2,"0")}"

- def parse_list list
  - if list
    - taglist = ""
    - list.each do |g|
      - taglist += ", #{g}"
    - taglist[2..30]

= partial :nav
- if locals[:results]
  - unless locals[:results].empty?
    %h3 Tracks
    .player
    %section{ id: 'audio'}
    %table.tracks
      %thead
        %tr
          %th Artist
          %th Album
          %th Name
          %th Duration
          %th D/L
          %th Type
          %th Lang
          %th Genre
      %tbody
        - locals[:results].each do |track|
          %tr
            %td
              %a{href: "/artist/id/#{track[:artist_id]}"}= track[:artist_name][0..30]
            %td
              %a{href: "/album/id/#{track[:album_id]}"}
                %img{src: track[:album_image]}
            %td
              %a.html5{href: track[:audio], data:{now_playing: track[:name][0..30]}}= track[:name][0..30]
            %td= fancy_seconds(track[:duration])
            %td
              %a{href: track[:audiodownload]} DL
            %td= track[:musicinfo][:vocalinstrumental]
            %td= track[:musicinfo][:lang]
            %td= parse_list(track[:musicinfo][:tags][:genres])


- else
  - if locals[:headers]
    %p= locals[:headers][:status]
    %p= locals[:headers][:error_message]
  - else
    %p Unknown Error
